"use strict";(function(){"use strict";var poniter={};poniter.listen = function PoniterListener(element){var trackedPointerStates=new Map();var elementListeners={};function trackedPointerState(pointerId){var state=trackedPointerStates.get(pointerId);if(state){return state;}else {state = {down:false, inside:false, listeners:{}};trackedPointerStates.set(pointerId, state);return state;}}function eventProxy(evt, state){var proxy=Object.create(evt);proxy.down = state.down;if(state.down){proxy.downX = state.downX;proxy.downY = state.downY;}proxy.inside = state.inside;proxy.pon = function(evtName, cb){state.listeners[evtName] = cb;return proxy;};return proxy;}function fireProxyAtListener(name, evt, state){if(state.listeners[name]){state.listeners[name](eventProxy(evt, state));}else if(elementListeners[name]){elementListeners[name](eventProxy(evt, state));}}element.addEventListener("pointerenter", function(evt){var state=trackedPointerState(evt.pointerId);state.inside = true;fireProxyAtListener("enter", evt, state);});element.addEventListener("pointerover", function(evt){var state=trackedPointerState(evt.pointerId);fireProxyAtListener("over", evt, state);});element.addEventListener("pointerdown", function(evt){var state=trackedPointerState(evt.pointerId);state.down = true;state.downX = evt.clientX;state.downY = evt.clientY;fireProxyAtListener("down", evt, state);});element.addEventListener("pointermove", function(evt){var state=trackedPointerState(evt.pointerId);fireProxyAtListener("move", evt, state);});element.addEventListener("pointerout", function(evt){var state=trackedPointerState(evt.pointerId);fireProxyAtListener("out", evt, state);});element.addEventListener("pointerup", function(evt){var state=trackedPointerState(evt.pointerId);state.down = false;fireProxyAtListener("up", evt, state);});element.addEventListener("pointercancel", function(evt){var state=trackedPointerState(evt.pointerId);fireProxyAtListener("cancel", evt, state);});element.addEventListener("gotpointercapture", function(evt){var state=trackedPointerState(evt.pointerId);state.captured = true;});element.addEventListener("lostpointercapture", function(evt){var state=trackedPointerStates.get(evt.pointerId);if(state){if(state.inside)state.captured = false;else trackedPointerStates["delete"](evt.pointerId);}});element.addEventListener("pointerleave", function(evt){var state=trackedPointerStates.get(evt.pointerId);if(state){if(state.captured){state.inside = false;}fireProxyAtListener("leave", evt, state);if(!state.captured){trackedPointerStates["delete"](evt.pointerId);}}else if(elementListeners.leave){elementListeners.leave(evt);}});var listenObject={on:function(evtName, cb){elementListeners[evtName] = cb;return listenObject;}};return listenObject;};if(typeof module != "undefined"){module.exports = poniter;}else {window.poniter = poniter;}})();

//# sourceMappingURL=poniter.js.map